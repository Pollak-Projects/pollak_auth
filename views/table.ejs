<!DOCTYPE html>
<html lang="hu" data-bs-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    />
    <title>Felhasználók</title>
    <style>
      body {
        background-color: rgb(28, 28, 28);
        color: #f1f1f1;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      }

      .table th,
      .table td {
        text-align: center;
        vertical-align: middle;
      }

      .table th {
        background-color: #343a40;
      }

      .table td input,
      .table td select {
        background-color: #1c1c1c;
        border: none;
        color: #f1f1f1;
        border-radius: 10px;
        width: 90%;
        padding: 8px;
      }

      .table td button {
        border-radius: 10px;
        transition: all 0.3s ease;
      }

      .table td button:hover {
        transform: scale(1.05);
      }

      .table tr:hover {
        background-color: #495057;
      }

      h3 {
        font-size: 2rem;
        margin-bottom: 20px;
      }

      .navbar {
        margin-bottom: 30px;
      }

      .navbar-brand {
        display: none;
      }

      .navbar-nav {
        margin-left: auto;
        margin-right: auto;
      }

      .navbar-nav .nav-item {
        margin-right: 15px;
      }

      .nav-link {
        font-size: 1.2rem;
      }
    </style>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container-fluid">
        <div class="collapse navbar-collapse">
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link" href="http://localhost:3300/token"
                >Token</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="http://localhost:3300/groups"
                >Csoportok</a
              >
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div
      class="container-fluid h-100 d-flex justify-content-center align-items-center flex-column mt-5"
    >
      <h3>Felhasználók</h3>
      <table class="table table-striped mt-3 w-75">
        <thead>
          <tr>
            <th>ID</th>
            <th>Felhasználónév</th>
            <th>Email</th>
            <th>Törlés</th>
            <th>Módosítás</th>
            <th>Csoport</th>
          </tr>
        </thead>
        <tbody>
          <% users.forEach(element => { %>
          <tr>
            <td>
              <input
                id="<%= element.id %>"
                value="<%= element.id %>"
                disabled
              />
            </td>
            <td>
              <input
                id="<%= element.id %>nev"
                value="<%= element.username %>"
              />
            </td>
            <td>
              <input id="<%= element.id %>email" value="<%= element.email %>" />
            </td>
            <td>
              <button
                class="btn btn-danger"
                onclick="Delete('<%= element.id %>')"
              >
                Törlés
              </button>
            </td>
            <td>
              <button
                class="btn btn-info"
                onclick="UpdateUser('<%= element.id %>')"
              >
                Módosítás
              </button>
            </td>
            <td>
              <select class="form-select" id="floatingSelect">
                <option selected><%= element.groupsNeve %></option>
                <% groups.forEach(element => { %>
                <option value="<%= element.id %>"><%= element.neve %></option>
                <% }) %>
              </select>
            </td>
          </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
  </body>
  <script>


    function getCookie(cname) {
  let name = cname + "=";
  let ca = document.cookie.split(';');
  for(let i = 0; i < ca.length; i++) {
    let c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}
        function parseJwt (token) {
    var base64Url = token.split('.')[1];
    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
    var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(''));

    return JSON.parse(jsonPayload);
 
               
}

 
    function Delete(id) {
      fetch(`/user/delete`, {
        headers: {
          "Content-Type": "application/json",
        },
        method: "DELETE",
        body: JSON.stringify({
          id: id,
        }),
      }).then((res) => {
        location.reload();
      });
    }

      function UpdateUser(id) {
        const username = document.getElementById(id + "nev");
        const email = document.getElementById(id + "email");
        const groupSelect = document.getElementById(id + "group");

        fetch(`/user/update`, {
          headers: {
            "Content-Type": "application/json",
          },
          method: "PUT",
          body: JSON.stringify({
            id: id,
            username: username.value,
            email: email.value,
            groupId: groupSelect.value,
          }),
        })
          .then((res) => res.json())
          .then((data) => {
            if (data.success) {
              location.reload();
            }
          })
          .catch((error) => console.error("Error:", error));
      }
    </script>
  </body>
</html>
